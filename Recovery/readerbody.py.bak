import pickle
import tkinter as tk
from tkinter import filedialog

root = tk.Tk()
root.withdraw()

file_directory = filedialog.askopenfilename()
with open(file_directory, 'r') as file1:
    a = file1.readlines()
n=0
line=a[n]

while not 'ORIGIN' in line:
    n+=1
    line=a[n]

family = []
listofamilies = []
icounter = 0
for i in range(148, n):
    line = a[i].rstrip('\n')

    if ' gene  ' in line:
        genefoundcounter = 2 ; nicounter = i - 1
        cp1 = 0 ; cp2 = 0 ; cp3 = 0 ; cp4 = 0 ; cp5 = 0 ; cp7=0; element = []

        while not (cp1 == 1 and cp2 == 1  and (cp3 == 1 or cp4 == 1)):
            nicounter += 1
            line = a[nicounter]

            if 'GeneID:' in line:

                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofgene = (line[start_ind: end_ind])
                element.append(int(seqIDofgene))
                element.append('gene')
                cp1 = 1

            if line[21:36] == '/gene_synonym="':

                start_ind = line.index('/gene_synonym="') + 15
                #end_ind = line.index('"', start_ind)
                seqsynonymofgene = line[start_ind: 90]
                seqsynonymofgene = seqsynonymofgene.rstrip('                            ')
                seqsynonymofgene = seqsynonymofgene.rstrip('\n')
                seqsynonymofgene = seqsynonymofgene.lstrip('                            ')
                increaseforsynonym = nicounter
                cp7=1

                while not '/note="' in line:

                    increaseforsynonym += 1
                    line = a[increaseforsynonym]
                    if '"' in line:

                        end_ind = line.index('"')
                        continuesynonymscript = line[21:end_ind]
                        continuesynonymscript = continuesynonymscript.rstrip('\n')
                        continuesynonymscript = continuesynonymscript.rstrip('"')
                        continuesynonymscript = continuesynonymscript.lstrip('                            ')
                        continuesynonymscript = continuesynonymscript.rstrip("/note='")
                        seqsynonymofgene += continuesynonymscript
                    if not '"' in line:
                        addsynonymscript = line[21:90]
                        addsynonymscript = addsynonymscript.rstrip('\n')
                        addsynonymscript = addsynonymscript.rstrip('"')
                        seqsynonymofgene += addsynonymscript
                element.append(seqsynonymofgene)

            if '/note=' in line and cp7==0:
                element.append('None')


            if line[21:28] == '/gene="':

                start_ind = line.index(('/gene="')) + 7
                end_ind = line.index('"', start_ind)
                seqofgeneinfoofgene = (line[start_ind: end_ind])
                seqofgeneinfoofgene = seqofgeneinfoofgene.rstrip('\n')
                element.append(seqofgeneinfoofgene)
                cp2 = 1
            '''    

            if line[21:28] == '/note="':
                start_ind = line.index(('/note="')) + 7
                end_ind = line.index('"', start_ind)
                seqofgenenoteofgene = (line[start_ind: end_ind])
                element.append(seqofgenenoteofgene)
                cp5 = 1
            '''
            if line[21:32] == 'complement(':

                start_ind = line.index('complement(') + 11
                stringloc = line[start_ind :55]
                stringloc = stringloc.rstrip('                         ')
                # stringloc=stringloc.split('..')
                stringloc = stringloc.rstrip('\n')
                stringloc = stringloc.rstrip(')')
                element.append(stringloc)
                cp3 = 1
                element.append('C/Only')

            if '   gene   ' in line:
                if not '(' in line:

                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp4 = 1


        element.reverse()
        locationscript = element[-1]
        element.remove(element[-1])
        locationlist = locationscript.split(',')
        locationintegerlistlittle = []
        locationintegerlistgrand = []
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger) == 2:
                start_reg = int(locationinteger[0])
                end_reg = int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle = []
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')

    if '   mRNA   ' in line:

        genefoundcounter = 2
        nicounter = i - 1
        cp1 = 0; cp2 = 0; cp3 = 0 ;cp4 = 0 ;cp5 = 0 ;cp6 = 0
        element = []

        while not (cp1 == 1 and cp2 == 1 and (cp3 == 1 or cp4 == 1 or cp5 == 1 or cp6 == 1)):

            nicounter += 1
            line = a[nicounter]

            # if line[31:38] == 'GeneID':
            if 'GeneID:' in line:

                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofmRNA = int(line[start_ind: end_ind])
                element.append(seqIDofmRNA)
                element.append('mRNA')
                cp1 = 1

            if line[21:30] == '/product=':
                start_ind = line.index('/product="') + 10
                textforproduct = line[start_ind: 90]
                textforproduct = textforproduct.rstrip('                    ')
                textforproduct = textforproduct.lstrip('                            ')
                textforproduct = textforproduct.rstrip(('\n'))
                textforproduct = textforproduct.rstrip(('"'))
                increaseforproduct = nicounter
                cp2 = 1

                while not '"\n' in line:
                    increaseforproduct +=1
                    line=a[increaseforproduct]
                    continueproductscript=line[21:90]
                    continueproductscript = continueproductscript.rstrip('\n')
                    continueproductscript = continueproductscript.lstrip('                            ')
                    continueproductscript = continueproductscript.rstrip('"')
                    textforproduct += continueproductscript
                element.append(textforproduct)

            if line[21:37] == 'complement(join(' or line[21:32] == 'complement(' or line[21:26] == 'join(':
                icounterforseq = nicounter
                if line[21:37] == 'complement(join(':
                    start_ind = line.index('complement(join(') + 16
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(('))'))


                    while not '))' in line:

                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip('))')
                        locationseqofmRNA += newlocation
                    cp3 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/J')

                if line[21:32] == 'complement(':

                    start_ind = line.index('complement(') + 11
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    cp4 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/Only')

                if line[20:26] == ' join(':

                    start_ind = line.index('join(') + 5
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    while not ')' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip(')')
                        locationseqofmRNA += newlocation
                    cp5 = 1
                    element.append(locationseqofmRNA)
                    element.append('J/Only')

            if '   mRNA   ' in line:
                if not '(' in line:

                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp6 = 1

        element.reverse()
        locationscript = element[-1]
        element.remove(element[-1])
        locationlist = locationscript.split(',')
        locationintegerlistlittle = []
        locationintegerlistgrand = []
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger) == 2:
                start_reg = int(locationinteger[0])
                end_reg = int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle = []
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')

    if '   ncRNA   ' in line:

        genefoundcounter = 2
        nicounter = i - 1
        cp1 = 0; cp2 = 0; cp3 = 0 ;cp4 = 0 ;cp5 = 0 ;cp6 = 0;cp8 = 0
        element = []

        while not (cp1 == 1 and cp2 == 1 and cp8==0 and (cp3 == 1 or cp4 == 1 or cp5 == 1 or cp6 == 1)):

            nicounter += 1
            line = a[nicounter]

            # if line[31:38] == 'GeneID':
            if 'GeneID:' in line:

                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofmRNA = int(line[start_ind: end_ind])
                element.append(seqIDofmRNA)
                element.append('ncRNA')
                cp1 = 1

            if line[21:30] == '/product=':
                start_ind = line.index('/product="') + 10
                textforproduct = line[start_ind: 90]
                textforproduct = textforproduct.rstrip('                    ')
                textforproduct = textforproduct.lstrip('                            ')
                textforproduct = textforproduct.rstrip(('\n'))
                textforproduct = textforproduct.rstrip(('"'))
                increaseforproduct = nicounter
                cp2 = 1

                while not '"\n' in line:
                    increaseforproduct += 1
                    line = a[increaseforproduct]
                    continueproductscript = line[21:90]
                    continueproductscript = continueproductscript.rstrip('\n')
                    continueproductscript = continueproductscript.rstrip('"')
                    continueproductscript = continueproductscript.lstrip('                            ')
                    textforproduct += continueproductscript
                element.append(textforproduct)

            if line[21:37] == 'complement(join(' or line[21:32] == 'complement(' or line[21:26] == 'join(':
                icounterforseq = nicounter
                if line[21:37] == 'complement(join(':
                    start_ind = line.index('complement(join(') + 16
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(('))'))


                    while not '))' in line:

                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip('))')
                        locationseqofmRNA += newlocation
                    cp3 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/J')

                if line[21:32] == 'complement(':

                    start_ind = line.index('complement(') + 11
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    cp4 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/Only')

                if line[20:26] == ' join(':

                    start_ind = line.index('join(') + 5
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    while not ')' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip(')')
                        locationseqofmRNA += newlocation
                    cp5 = 1
                    element.append(locationseqofmRNA)
                    element.append('J/Only')

            if '   ncRNA   ' in line:
                if not '(' in line:

                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp6 = 1
            if 'ncRNA_class=' in line:
                classlocofncRNA_start=line.index('ncRNA_class="')+13
                classlocofncRNA_end=line.index('"',36)
                classofncRNA=line[classlocofncRNA_start:classlocofncRNA_end]
                element.append(classofncRNA)

        element.reverse()
        locationscript = element[-1]
        element.remove(element[-1])
        locationlist = locationscript.split(',')
        locationintegerlistlittle = []
        locationintegerlistgrand = []
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger) == 2:
                start_reg = int(locationinteger[0])
                end_reg = int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle = []
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')

    if '   precursor_RNA   ' in line:

        genefoundcounter = 2
        nicounter = i - 1
        cp1 = 0; cp2 = 0; cp3 = 0 ;cp4 = 0 ;cp5 = 0 ;cp6 = 0
        element = []

        while not (cp1 == 1 and cp2 == 1 and (cp3 == 1 or cp4 == 1 or cp5 == 1 or cp6 == 1)):

            nicounter += 1
            line = a[nicounter]

            # if line[31:38] == 'GeneID':
            if 'GeneID:' in line:

                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofmRNA = int(line[start_ind: end_ind])
                element.append(seqIDofmRNA)
                element.append('precursor_RNA')
                cp1 = 1

            if line[21:30] == '/product=':

                start_ind = line.index('/product="') + 10
                textforproduct = line[start_ind: 90]
                textforproduct = textforproduct.rstrip('                    ')
                textforproduct = textforproduct.lstrip('                            ')
                textforproduct = textforproduct.rstrip(('\n'))
                textforproduct = textforproduct.rstrip(('"'))
                increaseforproduct = nicounter
                cp2 = 1

                while not '"\n' in line:
                        increaseforproduct += 1
                        line = a[increaseforproduct]
                        continueproductscript = line[21:90]
                        continueproductscript = continueproductscript.rstrip('\n')
                        continueproductscript = continueproductscript.rstrip('"')
                        continueproductscript = continueproductscript.lstrip('                            ')
                        textforproduct += continueproductscript
                element.append(textforproduct)

            if line[21:37] == 'complement(join(' or line[21:32] == 'complement(' or line[21:26] == 'join(':
                icounterforseq = nicounter
                if line[21:37] == 'complement(join(':
                    start_ind = line.index('complement(join(') + 16
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(('))'))

                    while not '))' in line:

                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip('))')
                        locationseqofmRNA += newlocation
                    cp3 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/J')

                if line[21:32] == 'complement(':

                    start_ind = line.index('complement(') + 11
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    cp4 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/Only')

                if line[20:26] == ' join(':

                    start_ind = line.index('join(') + 5
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    while not ')' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip(')')
                        locationseqofmRNA += newlocation
                    cp5 = 1
                    element.append(locationseqofmRNA)
                    element.append('J/Only')

            if '   precursor_RNA   ' in line:
                if not '(' in line:

                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp6 = 1

        element.reverse()
        locationscript = element[-1]
        element.remove(element[-1])
        locationlist = locationscript.split(',')
        locationintegerlistlittle = []
        locationintegerlistgrand = []
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger) == 2:
                start_reg = int(locationinteger[0])
                end_reg = int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle = []
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')


    if '   regulatory   ' in line:

        genefoundcounter = 2
        nicounter = i - 1
        cp1 = 0; cp2 = 0; cp3 = 0 ;cp4 = 0 ;cp5 = 0 ;cp6 = 0
        element = []

        while not (cp1 == 1 and cp2 == 1 and (cp3 == 1 or cp4 == 1 or cp5 == 1 or cp6 == 1)):

            nicounter += 1
            line = a[nicounter]

            # if line[31:38] == 'GeneID':
            if 'GeneID:' in line:

                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofmRNA = int(line[start_ind: end_ind])
                element.append(seqIDofmRNA)
                element.append('regulatory')
                cp1 = 1

            if '/regulatory_class="' in line:
                start_ind = line.index('/regulatory_class="')+19
                end_ind = line.index('"',36)
                regulatoryclass=line[start_ind:end_ind]
                element.append(regulatoryclass)
                cp2=1



            if line[21:37] == 'complement(join(' or line[21:32] == 'complement(' or line[21:26] == 'join(':
                icounterforseq = nicounter
                if line[21:37] == 'complement(join(':
                    start_ind = line.index('complement(join(') + 16
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(('))'))


                    while not '))' in line:

                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip('))')
                        locationseqofmRNA += newlocation
                    cp3 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/J')

                if line[21:32] == 'complement(':

                    start_ind = line.index('complement(') + 11
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    cp4 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/Only')

                if line[20:26] == ' join(':

                    start_ind = line.index('join(') + 5
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    while not ')' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip(')')
                        locationseqofmRNA += newlocation
                    cp5 = 1
                    element.append(locationseqofmRNA)
                    element.append('J/Only')

            if '   regulatory   ' in line:
                if not '(' in line:

                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp6 = 1

        element.reverse()
        locationscript = element[-1]
        element.remove(element[-1])
        locationlist = locationscript.split(',')
        locationintegerlistlittle = []
        locationintegerlistgrand = []
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger) == 2:
                start_reg = int(locationinteger[0])
                end_reg = int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle = []
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')

    if '   exon   ' in line:

        genefoundcounter = 2;nicounter = i - 1
        cp1 = 0;cp3 = 0;cp4 = 0;cp5 = 0;cp6 = 0
        element = []

        while not (cp1 == 1 and (cp3 == 1 or cp4 == 1 or cp5 == 1 or cp6 == 1)):

            nicounter += 1
            line = a[nicounter]

            # if line[31:38] == 'GeneID':
            if 'GeneID:' in line:
                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofmRNA = int(line[start_ind: end_ind])
                element.append(seqIDofmRNA)
                element.append('exon')
                cp1 = 1


            if line[21:37] == 'complement(join(' or line[21:32] == 'complement(' or line[21:26] == 'join(':
                icounterforseq = nicounter
                if line[21:37] == 'complement(join(':
                    start_ind = line.index('complement(join(') + 16
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(('))'))


                    while not '))' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip('))')
                        locationseqofmRNA += newlocation
                    cp3 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/J')

                if line[21:32] == 'complement(':
                    start_ind = line.index('complement(') + 11
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    cp4 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/Only')

                if line[20:26] == ' join(':

                    start_ind = line.index('join(') + 5
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    while not ')' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip(')')
                        locationseqofmRNA += newlocation
                    cp5 = 1
                    element.append(locationseqofmRNA)
                    element.append('J/Only')

            if '   exon   ' in line:
                if not '(' in line:
                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp6 = 1

        element.reverse()
        locationscript = element[-1]
        element.remove(element[-1])
        locationlist = locationscript.split(',')
        locationintegerlistlittle = []
        locationintegerlistgrand = []
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger) == 2:
                start_reg = int(locationinteger[0])
                end_reg = int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle = []
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')

    if '   misc_RNA   ' in line:

        genefoundcounter = 2;nicounter = i - 1
        cp1 = 0;cp2 = 0;cp3 = 0;cp4 = 0;cp5 = 0;cp6 = 0
        element = []

        while not (cp1 == 1 and cp2 == 1 and (cp3 == 1 or cp4 == 1 or cp5 == 1 or cp6 == 1)):

            nicounter += 1
            line = a[nicounter]

            # if line[31:38] == 'GeneID':
            if 'GeneID:' in line:
                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofmRNA = int(line[start_ind: end_ind])
                element.append(seqIDofmRNA)
                element.append('misc_RNA')
                cp1 = 1
            if line[21:30] == '/product=':

                start_ind = line.index('/product="') + 10
                textforproduct = line[start_ind: 90]
                textforproduct = textforproduct.rstrip('                    ')
                textforproduct = textforproduct.lstrip('                            ')
                textforproduct = textforproduct.rstrip(('\n'))
                textforproduct = textforproduct.rstrip(('"'))
                increaseforproduct = nicounter
                cp2 = 1

                while not '"\n' in line:
                    increaseforproduct += 1
                    line = a[increaseforproduct]
                    continueproductscript = line[21:90]
                    continueproductscript = continueproductscript.rstrip('\n')
                    continueproductscript = continueproductscript.rstrip('"')
                    textforproduct += continueproductscript
                element.append(textforproduct)

            if line[21:37] == 'complement(join(' or line[21:32] == 'complement(' or line[21:26] == 'join(':
                icounterforseq = nicounter
                if line[21:37] == 'complement(join(':
                    start_ind = line.index('complement(join(') + 16
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(('))'))


                    while not '))' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip('))')
                        locationseqofmRNA += newlocation
                    cp3 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/J')

                if line[21:32] == 'complement(':
                    start_ind = line.index('complement(') + 11
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    cp4 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/Only')

                if line[20:26] == ' join(':

                    start_ind = line.index('join(') + 5
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    while not ')' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip(')')
                        locationseqofmRNA += newlocation
                    cp5 = 1
                    element.append(locationseqofmRNA)
                    element.append('J/Only')

            if '   misc_RNA   ' in line:
                if not '(' in line:
                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp6 = 1

        element.reverse()
        locationscript = element[-1]
        element.remove(element[-1])
        locationlist = locationscript.split(',')
        locationintegerlistlittle = []
        locationintegerlistgrand = []
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger) == 2:
                start_reg = int(locationinteger[0])
                end_reg = int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle = []
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')

    if '   CDS   ' in line:

        genefoundcounter = 2;nicounter = i - 1
        cp1 = 0;cp2 = 0;cp3 = 0;cp4 = 0;cp5 = 0;cp6 = 0;cp7=0
        element = []

        while not (cp1 == 1 and cp2 == 1 and  cp7==1 and (cp3 == 1 or cp4 == 1 or cp5 == 1 or cp6 == 1)):

            nicounter += 1
            line = a[nicounter]

            # if line[31:38] == 'GeneID':
            if 'GeneID:' in line:
                start_ind = line.index('GeneID:') + 7
                end_ind = line.index('"', start_ind)
                seqIDofmRNA = int(line[start_ind: end_ind])
                element.append(seqIDofmRNA)
                #element.append('CDS')
                cp1 = 1
            if '/product=' in line:

                start_ind = line.index('/product="') + 10
                textforproduct = line[start_ind: 90]
                textforproduct = textforproduct.rstrip('                    ')
                textforproduct = textforproduct.rstrip(('\n'))
                textforproduct = textforproduct.rstrip(('"'))
                increaseforproduct = nicounter
                cp2 = 1

                while not '"\n' in line:
                    increaseforproduct += 1
                    line = a[increaseforproduct]
                    continueproductscript = line[21:90]
                    continueproductscript = continueproductscript.rstrip('\n')
                    continueproductscript = continueproductscript.rstrip('"')
                    textforproduct += continueproductscript
                element.append(textforproduct)

            if '/translation="' in line:
                start_ind= line.index('/translation="')+14
                translationproduct = line[start_ind:90]
                translationproduct = translationproduct.rstrip('                       ')
                translationproduct = translationproduct.lstrip('                            ')
                translationproduct = translationproduct.rstrip('\n')
                mid2=nicounter
                increasefortranslation = mid2
                line=a[nicounter+1]
                while not '"' in line:
                    increasefortranslation +=1
                    line = a[increasefortranslation]
                    add_translation=line[21:92]
                    add_translation = add_translation.rstrip('   ')
                    add_translation = add_translation.rstrip('\n')
                    translationproduct += add_translation
                    if '"' in line:
                        end_ind=line.index('"')
                        end_translation=line[21:end_ind]
                        end_translation = end_translation.rstrip('\n')
                        #translationproduct += end_translation
                translationproduct=translationproduct.rstrip('"')
                element.append(translationproduct)
                element.append('CDS')
                cp7=1

            if line[21:37] == 'complement(join(' or line[21:32] == 'complement(' or line[21:26] == 'join(':
                icounterforseq = nicounter
                if line[21:37] == 'complement(join(':
                    start_ind = line.index('complement(join(') + 16
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(('))'))

                    while not '))' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip('))')
                        locationseqofmRNA += newlocation
                    cp3 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/J')

                if line[21:32] == 'complement(' and line[21:33] != 'complement(j':
                    start_ind = line.index('complement(') + 11
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    cp4 = 1
                    element.append(locationseqofmRNA)
                    element.append('C/Only')

                if line[20:26] == ' join(':

                    start_ind = line.index('join(') + 5
                    locationseqofmRNA = line[start_ind:90]
                    locationseqofmRNA = locationseqofmRNA.rstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.lstrip('                                                    ')
                    locationseqofmRNA = locationseqofmRNA.rstrip('\n')
                    locationseqofmRNA = locationseqofmRNA.rstrip(')')
                    while not ')' in line:
                        icounterforseq += 1
                        line = a[icounterforseq]
                        newlocation = line
                        newlocation = newlocation.rstrip('\n')
                        newlocation = newlocation.rstrip('                                                            ')
                        newlocation = newlocation.lstrip('                                                            ')
                        newlocation = newlocation.rstrip(')')
                        locationseqofmRNA += newlocation
                    cp5 = 1
                    element.append(locationseqofmRNA)
                    element.append('J/Only')

            if '   CDS   ' in line:
                if not '(' in line:
                    stringloc = line[21:45]
                    stringloc = stringloc.rstrip('                        ')
                    stringloc = stringloc.rstrip('\n')
                    element.append(stringloc)
                    element.append('N/')
                    cp6 = 1

        element.reverse()
        locationscript=element[-1]
        element.remove(element[-1])
        locationlist=locationscript.split(',')
        locationintegerlistlittle=[]
        locationintegerlistgrand=[]
        for fragments in locationlist:
            locationinteger = fragments.split('..')
            if len(locationinteger)==2:
                start_reg=int(locationinteger[0])
                end_reg=int(locationinteger[1])
                locationintegerlistlittle.append(start_reg)
                locationintegerlistlittle.append(end_reg)
                locationintegerlistgrand.append(locationintegerlistlittle)
                locationintegerlistlittle=[]
        element.append(locationintegerlistgrand)
        listofamilies.append(element)

    element = []
    icounter = 0
    nicounter = i
    line = a[i].rstrip('\n')

allelements=[]

for count1 in listofamilies:
        allelements.append(count1)


def myfunction(a):
    return a[2]

allelements2=[]
allelements3=[]

for i in allelements:
    if i[0]=='CDS':
        allelements2.append(i)


    else:
        allelements3.append(i)

allelements2.sort(key=myfunction)

def myfunction2(a):
    return a[1]
allelements3.sort(key=myfunction2)

list3rd=[]
list2nd=[]

#print len(allelements)

for i in range(len(allelements3)-1):
    if list2nd==[]:
        GeneID=allelements3[i][1]
        list2nd.append(GeneID)
        #list2nd.append(allelements3[i])

    if list2nd !=[]:
        if allelements3[i][1] == GeneID:
            list2nd.append(allelements3[i])

        if allelements3[i+1][1] !=GeneID:
            list3rd.append(list2nd)
            list2nd=[]

a=0
for eclipse in range(len(allelements2)-1):
    if allelements2[eclipse][2] == list3rd[a][0]:
        list3rd[a].append(allelements2[eclipse])
    else:
        a+=1
        #print list3rd[a-1]
        #list3rd[a].append(allelements3[eclipse])

#from DNAllsequencexporter import *
with open(file_directory, 'r') as file1:
    a = file1.readlines()
start=0
end=0
line=a[0]
while not 'ORIGIN' in line:
    start+=1
    line=a[start]
print (start)
while not '//\n' in line:
    end+=1
    line=a[end]
print (end)
allsequence=''

for counterforDNA in range(start+1,end-1):
    line=a[counterforDNA]
    line=line.rstrip('\n')
    part1=line[10:20]
    part2=line[21:31]
    part3=line[32:42]
    part4=line[43:53]
    part5=line[54:64]
    part6=line[65:75]

    allsequence+=part1
    allsequence+=part2
    allsequence+=part3
    allsequence+=part4
    allsequence+=part5
    allsequence+=part6
'''
with open('Modal_Organism_Databases/Homo_Sapiens/Chromosome 1/sequence.txt', 'w') as f:
    f.write(allsequence)
'''



#from sequence_assign_function import *
for hey in list3rd:
        for element in hey:
           if not isinstance(element,int):
                last_data_of_element_sequence = []
                len_of_locations = len(element[-1])
                for i in range(len_of_locations):
                        start_location = element[-1][i][0]
                        end_location = element[-1][i][1]
                        partial_sequence = allsequence[start_location:end_location]
                        last_data_of_element_sequence.append(partial_sequence)

                if element[-2]=='C/Only' or element[-2]=='C/J':
                    last_data_of_element_sequence.reverse()


                element.append(last_data_of_element_sequence)
'''
for eclipse in list3rd:
    for searcher_layer_2 in eclipse:
        base_sequence = ''
        sequence_list_text_all = []
        if not isinstance(searcher_layer_2,int):
            for fragments_in_element in searcher_layer_2[-1]:
                sequence_list_text_all.append(fragments_in_element)
            for addcj in sequence_list_text_all:
                base_sequence += addcj
            searcher_layer_2.append(base_sequence)
'''
###WRITING LEGACY METHOD
'''
with open('Modal_Organism_Databases/Homo_Sapiens/Chromosome 1/Data_Analyze_Text.txt', 'w') as f:
    for i in range(len(list3rd)):
        f.write(str(list3rd[i][0])+'\n')
        for j in range(len(list3rd[i])):
            f.write(str(list3rd[i][j])+' ')
        f.write('\n\n\n')
'''



###
'''
file_name='ABCA1_list.txt'
with open('Modal_Organism_Databases/Homo_Sapiens/Chromosome 1/'+str(file_name), 'w') as f:
    pickle.dump(list3rd,f)
'''